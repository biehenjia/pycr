jobs:
  build:
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install build tooling
        run: python -m pip install -U pip build cibuildwheel==2.21.3
      - name: Build wheels
        env:
          CIBW_BUILD_VERBOSITY: "3"
          CIBW_SKIP: "pp* *_i686 *musllinux*"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
        run: python -m cibuildwheel --output-dir dist
      - name: Build sdist (Linux only)
        if: runner.os == 'Linux'
        run: python -m build --sdist -o dist
      - uses: actions/upload-artifact@v4
        with:
          name: dist-native-${{ matrix.os }}  
          path: dist/*

  pyodide:
    name: cibuildwheel (pyodide)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install tooling
        run: python -m pip install -U pip "cibuildwheel>=2.19" pyodide-build
      - name: Build Pyodide wheel
        env:
          CIBW_PLATFORM: "pyodide"
          CIBW_BUILD_VERBOSITY: "3"
          CIBW_PYODIDE_VERSION: "0.28.2" 
          CIBW_TEST_COMMAND: "python -m pytest -q"
        run: python -m cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: dist-pyodide
          path: dist/*pyodide_*_wasm32.whl

  publish:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download native artifacts only
        uses: actions/download-artifact@v4
        with:
          pattern: dist-native-*
          merge-multiple: true
          path: dist
      - name: Publish (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: dist
