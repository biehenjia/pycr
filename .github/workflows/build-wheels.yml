name: Build wheels

on:
  push:
    branches: [ main ]
    tags:
      - "v*"               # optional; still only builds
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-latest]

    env:
      # Python versions to target
      CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
      CIBW_SKIP: "pp* *musllinux*"

      # Architectures
      CIBW_ARCHS_LINUX: "x86_64 aarch64"
      CIBW_ARCHS_MACOS: "x86_64 arm64"     # or "universal2" if suitable
      CIBW_ARCHS_WINDOWS: "AMD64"

      # Modern manylinux policy
      CIBW_MANYLINUX_X86_64: "manylinux_2_28"
      CIBW_MANYLINUX_AARCH64: "manylinux_2_28"

      # Optional: run tests inside built wheels
      # CIBW_TEST_REQUIRES: "pytest"
      # CIBW_TEST_COMMAND: "pytest -q {project}/tests"

      # Parallel CMake
      CMAKE_BUILD_PARALLEL_LEVEL: "2"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel build

      # Build sdist once on Linux
      - name: Build sdist
        if: matrix.os == 'ubuntu-24.04'
        run: python -m build --sdist

      - name: Build wheels with cibuildwheel
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: |
            wheelhouse/*.whl
            dist/*.tar.gz
          if-no-files-found: ignore
          retention-days: 14
